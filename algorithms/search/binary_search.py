import random

# Бинарный поиск - это алгоритм поиска элемента в отсортированном массиве.
# Он работает следующим образом: берется средний элемент массива, если он равен
# искомому значению, то поиск завершается, если он больше искомого значения, то
# поиск продолжается в левой половине массива, если он меньше искомого значения,
# то поиск продолжается в правой половине массива. Таким образом, сложность
# алгоритма равна O(log n).

def binary_search(arr, target):
    arr = sorted(arr)  # Сортируем массив
    left, right = 0, len(arr) - 1  # Левая и правая границы массива
    while 1:  # Бесконечный цикл
        mid = (right - left) // 2 + left  # Индекс среднего элемента
        if arr[mid] == target:  # Если средний элемент равен искомому значению
            return mid  # Возвращаем индекс искомого элемента
        elif arr[mid] < target:  # Если средний элемент меньше искомого значения
            left = mid + 1  # Сдвигаем левую границу массива
        else:  # Если средний элемент больше искомого значения
            right = mid - 1  # Сдвигаем правую границу массива
    return None  # Если элемент не найден, возвращаем None


if __name__ == "__main__":
    # Тест функции binary_search со случайными выборками
    for _ in range(100):
        arr = set(random.randint(0, 100) for _ in range(100))
        arr = list(arr)
        target = random.choice(arr)
        assert binary_search(arr, target) == arr.index(target)
